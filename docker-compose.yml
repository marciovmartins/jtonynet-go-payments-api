name: payments-api

networks:
  payments-network:
    driver: bridge

volumes:
  postgres-payments-data:
    external: false
  test-postgres-payments-data:
    external: false
  redis-payments-data:
    external: false

services:
  postgres-payments:
    image: postgres:16.0-alpine
    container_name: postgres-payments
    hostname: postgres-payments
    environment:
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_pass
      POSTGRES_DB: payments_db
      PGTZ: America/Sao_Paulo
      TZ: America/Sao_Paulo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U api_user -d payments_db" ]
      interval: 2s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-payments-data:/var/lib/postgresql/data
      - ./payments-api/internal/adapter/database/postgres/seeds:/seeds
    command: postgres -c timezone=America/Sao_Paulo
    networks:
      - payments-network

  migrate:
    image: migrate/migrate
    volumes:
      - ./payments-api/internal/adapter/database/postgres/migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://api_user:api_pass@postgres-payments:5432/payments_db?sslmode=disable", "-verbose", "up" ]
    depends_on:
      - postgres-payments
    networks:
      - payments-network

  test-postgres-payments:
    image: postgres:16.0-alpine
    container_name: test-postgres-payments
    hostname: test-postgres-payments
    environment:
      POSTGRES_USER: test_api_user
      POSTGRES_PASSWORD: test_api_pass
      POSTGRES_DB: test_payments_db
      PGTZ: America/Sao_Paulo
      TZ: America/Sao_Paulo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U api_user -d payments_db" ]
      interval: 2s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - test-postgres-payments-data:/var/lib/postgresql/data
    command: postgres -c timezone=America/Sao_Paulo
    networks:
      - payments-network

  redis-payments:
    container_name: redis-payments
    hostname: redis-payments
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    volumes:
      - redis-payments-data:/data
    networks:
      - payments-network
    command: [ "redis-server", "--notify-keyspace-events", "Ex" ]

  payment-transaction-processor:
    build:
      context: ./payments-api
      dockerfile: Dockerfile
    depends_on:
      - postgres-payments
      - redis-payments
    container_name: payment-transaction-processor
    hostname: payment-transaction-processor
    ports:
      - "9090:9090"
    volumes:
      - ./payments-api:/usr/src/app/
    tty: true
    networks:
      - payments-network
    command: CompileDaemon -log-prefix=false -build="go build -o /usr/src/app/bin/processor/main /usr/src/app/cmd/processor/main.go" -command="./bin/processor/main"

  payment-transaction-rest:
    build:
      context: ./payments-api
      dockerfile: Dockerfile
    depends_on:
      - payment-transaction-processor
    container_name: payment-transaction-rest
    hostname: payment-transaction-rest
    ports:
      - "8080:8080"
    volumes:
      - ./payments-api:/usr/src/app/
    tty: true
    networks:
      - payments-network
    command: CompileDaemon -log-prefix=false -build="go build -o /usr/src/app/bin/rest/main /usr/src/app/cmd/rest/main.go" -command="./bin/rest/main"

  gatling:
    build:
      context: ./tests/gatling
      dockerfile: Dockerfile
    container_name: gatling
    hostname: gatling
    env_file:
      - ./payments-api/.env
    ports:
      - "8082:8082"
    depends_on:
      - payment-transaction-processor
      - payment-transaction-rest
    volumes:
      - ./tests/gatling/user-files:/usr/src/app/user-files
      - ./tests/gatling/results:/usr/src/app/results
      - ./tests/gatling/results/history:/usr/src/app/results/history
      - ./tests/gatling/results/latest:/usr/src/app/results/latest
    networks:
      - payments-network
